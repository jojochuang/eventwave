/**
chuangw: test case 4 is a more complicated service layering test case (than test case 2 )
This is the upper service.

*/
service TestCase4;
provides ServComp;
trace=high;
typedefs {
}
services {
  ServComp lower = TestCase4Lower();
}

constants {
}
 
state_variables {
  context A{
  }
}

messages {
}
 
transitions {
  downcall (state == init)maceInit()  {
    downcall_setUpcallHandler( lower );
    uint32_t x = 1;
    uint32_t ret1 = downcall_test( x );
    maceout<< ret1 << Log::endl;
    x = 2;
    uint32_t ret2 = downcall_test( x );
    maceout<< ret2 << Log::endl;
  }
  downcall setUpcallHandler(registration_uid_t regId)  {
    //downcall_setAuthoritativeJoinHandler(regId);
  }
  downcall test( uint32_t n ){
    return downcall_test( n );
  }
  upcall testVoidUpcall_NoParam( ){ 
    upcall_testVoidUpcall_NoParam(); 
  }
  upcall testVoidUpcall_WithParam( uint32_t param ){ 
    upcall_testVoidUpcall_WithParam(param); 
  }
  upcall testUpcallReturn( ){ 
    return upcall_testUpcallReturn( 1 );
  }
  upcall testUpcallReturn( uint32_t param ){ 
    return upcall_testUpcallReturn(param);
  }
}
